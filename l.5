Задана рекуррентная функция. Область определения функции – натуральные числа. Написать программу сравнительного вычисления данной функции рекурсивно и итерационно (значение, время). Определить (смоделировать) границы применимости рекурсивного и итерационного подхода. Результаты сравнительного исследования времени вычисления представить в табличной и графической форме в виде отчета по лабораторной работе. 
F(n<2)=1;F(n)=(-1)n*(2F(n-1)+F(n-3))(при n четном),F(n)= 5F(n-1)/(2n)!- F(n-3)(при n нечетном)

import math
import timeit
def F_rec(n):
    if n < 2:
        return 1
    if n % 2 == 0:
        return ((-1) ^ n) * (2 * F_rec(n - 1) + F_rec(n - 3))
    else:
        return (5 * F_rec(n - 1)) / math.factorial(2 * n) - F_rec(n - 3)
def F_iter(n):
    F = [1, 1]
    for i in range(2, n + 1):
        if i % 2 == 0:
            val = ((-1) ^ i) * (2 * F[i - 1] + F[i - 3])
        else:
            val = (5 * F[i - 1]) / math.factorial(2 * i) - F[i - 3]
        F.append(val)
    return F[n]
def ri_timeit(func, n, number=1):
    timer = timeit.Timer(lambda: func(n))
    elapsed = timer.timeit(number=number)
    result = func(n)
    return result, elapsed
n = int(input('n: '))
rec_result, rec_time = ri_timeit(F_rec, n)
print(f"Рекурсивный результат: {rec_result}, время: {rec_time:.6f} секунд")
iter_result, iter_time = ri_timeit(F_iter, n)
print(f"Итеративный результат: {iter_result}, время: {iter_time:.6f} секунд")
