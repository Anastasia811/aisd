Задание состоит из двух частей. 1 часть – написать программу в соответствии со своим вариантом задания. Написать 2 варианта формирования (алгоритмический и с помощью функций Питона), сравнив по времени их выполнение.
В парламентскую комиссию нужно выбрать К членов. Претендентов предоставили N партий. Вывести все возможные варианты комиссии (от каждой партии должно быть от 1 до 3 членов).

from itertools import product
import timeit
def algorithmic(N, K):
    result = []
    def backtrack(i, current, total):
        if i == N:
            if total == K:
                result.append(current[:])
            return
        for members in range(1, 4):  # от 1 до 3
            if total + members <= K:
                current.append(members)
                backtrack(i + 1, current, total + members)
                current.pop()
    backtrack(0, [], 0)
    return result
def using_functions(N, K):
    ranges = [range(1, 4)] * N
    result = [comb for comb in product(*ranges) if sum(comb) == K]
    return result
def compare_time(N, K):
    t1 = timeit.timeit(lambda: algorithmic(N, K), number=1)
    t2 = timeit.timeit(lambda: using_functions(N, K), number=1)
    print(f"Algorithmic time: {t1:.6f} seconds")
    print(f"Using functions time: {t2:.6f} seconds")

if __name__ == "__main__":
    N = int(input("Введите количество партий (N): "))
    K = int(input("Введите число членов комиссии (K): "))

    variants_algo = algorithmic(N, K)
    variants_func = using_functions(N, K)

    print("Алгоритмический вариант - количество вариантов:", len(variants_algo))
    print("Алгоритмический вариант - варианты:", variants_algo)
    print("Вариант с функциями - количество вариантов:", len(variants_func))
    print("Вариант с функциями - варианты:", variants_func)
    compare_time(N, K)
